<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhangbin.yun.sys.modules.rights.mapper.GroupMapper">

    <resultMap id="BaseResultMap" type="com.zhangbin.yun.sys.modules.rights.model.$do.GroupDO">
        <id column="g_id" jdbcType="BIGINT" property="id"/>
        <result column="g_pid" jdbcType="BIGINT" property="pid"/>
        <result column="g_group_code" jdbcType="INTEGER" property="groupCode"/>
        <result column="g_group_type" jdbcType="VARCHAR" property="groupType"/>
        <result column="g_group_name" jdbcType="VARCHAR" property="groupName"/>
        <result column="g_description" jdbcType="VARCHAR" property="description"/>
        <result column="g_group_sort" jdbcType="INTEGER" property="groupSort"/>
        <result column="g_group_master" jdbcType="VARCHAR" property="groupMaster"/>
        <result column="g_creator" jdbcType="VARCHAR" property="creator"/>
        <result column="g_updater" jdbcType="VARCHAR" property="updater"/>
        <result column="g_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="g_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <resultMap id="CascadeResultMap0" type="com.zhangbin.yun.sys.modules.rights.model.$do.GroupDO"
               extends="BaseResultMap">
        <collection column="g_id" property="menus"
                    javaType="java.util.HashSet" ofType="com.zhangbin.yun.sys.modules.rights.model.$do.MenuDO"
                    select="com.zhangbin.yun.sys.modules.rights.mapper.MenuMapper.selectByGroupId">
        </collection>
    </resultMap>

    <resultMap id="CascadeResultMap1" type="com.zhangbin.yun.sys.modules.rights.model.$do.GroupDO"
               extends="CascadeResultMap0">
        <collection column="g_id" property="users"
                    javaType="java.util.HashSet" ofType="com.zhangbin.yun.sys.modules.rights.model.$do.UserDO"
                    select="com.zhangbin.yun.sys.modules.rights.mapper.UserMapper.selectByGroupId">
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        g_id, g_pid, g_group_code, g_group_type, g_group_name, g_description, g_group_sort, g_group_master, g_creator, g_updater, g_create_time, g_update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="CascadeResultMap1">
        select
        <include refid="Base_Column_List"/>
        from t_sys_group
        where g_id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByPrimaryKeys" parameterType="java.util.HashSet" resultMap="CascadeResultMap1">
        select
        <include refid="Base_Column_List"/>
        from t_sys_group
        where g_id in (
        <foreach collection="ids" index="index" item="id" separator="," open="(" close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
        )
    </select>

    <select id="selectByPid" parameterType="java.lang.Long" resultMap="CascadeResultMap1">
        select
        <include refid="Base_Column_List"/>
        from t_sys_group
        where g_pid = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectDeptByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_group where g_id in (
        select group_id from t_sys_user_group where user_id = #{u_id}
        ) and g_group_type ='${@com.zhangbin.yun.sys.modules.rights.common.constant.RightsConstants@DEPT_TYPE}'
        limit 1
    </select>

    <select id="selectGroupByUserId" parameterType="java.lang.Long" resultMap="CascadeResultMap0">
        select
        <include refid="Base_Column_List"/>
        from t_sys_group where g_id in (
        select group_id from t_sys_user_group where user_id = #{userId}
        ) and g_group_type !='${@com.zhangbin.yun.sys.modules.rights.common.constant.RightsConstants@DEPT_TYPE}'
    </select>

    <select id="selectByUserId" parameterType="java.lang.Long" resultMap="CascadeResultMap0">
        select
        <include refid="Base_Column_List"/>
        from t_sys_group where g_id in (
        select group_id from t_sys_user_group where user_id = #{userId}
        )
    </select>

    <select id="selectByUserIdForUserMapper" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_group where g_id in (
        select group_id from t_sys_user_group where user_id = #{userId}
        ) and g_group_type !='${@com.zhangbin.yun.sys.modules.rights.common.constant.RightsConstants@DEPT_TYPE}'
    </select>

    <select id="selectGroupCodesByUsername" parameterType="java.lang.String" resultType="java.lang.String">
        select g_group_code
        from t_sys_group
        where g_id in (
            select group_id
            from t_sys_user_group
                     join t_sys_user on user_id = u_id and u_username = #{username}
        )
    </select>

    <select id="countAssociatedUser" parameterType="java.util.HashSet" resultType="int">
        select count(*) FROM t_sys_group g, t_sys_user_group ug
        where g.g_id = ug.group_id AND ug.group_id in
        <foreach collection="groupIds" index="index" item="id" separator="," open="(" close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="selectByMenuIds" parameterType="java.util.HashSet" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_group, t_sys_group_menu
        where menu_id in
        <foreach collection="menuIds" index="index" item="menuId" separator="," open="(" close=")">
            #{menuId,jdbcType=INTEGER}
        </foreach>
        and g_id = group_id
    </select>

    <select id="selectByCriteria"
            parameterType="com.zhangbin.yun.sys.modules.rights.model.criteria.GroupQueryCriteria"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_group
        <trim prefix="where" prefixOverrides="and | or">
            <choose>
                <when test='criteria != null'>
                    <if test="criteria.pid != null">
                        and g_pid = #{criteria.pid,jdbcType=BIGINT}
                    </if>
                    <choose>
                        <when test='criteria.groupType != null and criteria.groupType != ""'>
                            and g_group_type = #{criteria.groupType,jdbcType=VARCHAR}
                        </when>
                        <otherwise>
                            g_group_type
                            !='${@com.zhangbin.yun.sys.modules.rights.common.constant.RightsConstants@DEPT_TYPE}'
                        </otherwise>
                    </choose>
                    <if test='criteria.groupName != null and criteria.groupName != ""'>
                        and g_group_name like concat('%', #{criteria.groupName}, '%')
                    </if>
                    <if test='criteria.startTime != null and criteria.startTime != ""'>
                        and g_create_time >= #{criteria.startTime}
                    </if>
                    <if test='criteria.endTime != null and criteria.endTime != ""'>
                        and g_create_time <![CDATA[<=]]> #{criteria.endTime}
                    </if>
                </when>
                <otherwise>
                    and g_group_type
                    !='${@com.zhangbin.yun.sys.modules.rights.common.constant.RightsConstants@DEPT_TYPE}'
                </otherwise>
            </choose>
        </trim>
    </select>

    <insert id="insert" parameterType="com.zhangbin.yun.sys.modules.rights.model.$do.GroupDO"
            useGeneratedKeys="true" keyProperty="id">
        insert into t_sys_group (g_pid, g_group_code, g_group_type,
                                 g_group_name, g_description, g_group_sort, g_group_master, g_creator,
                                 g_updater, g_create_time, g_update_time)
        values (#{pid,jdbcType=BIGINT}, #{groupCode,jdbcType=INTEGER}, #{groupType,jdbcType=INTEGER},
                #{groupName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{groupSort,jdbcType=INTEGER},
                #{groupMaster,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{updater,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="updateByPrimaryKeySelective"
            parameterType="com.zhangbin.yun.sys.modules.rights.model.$do.GroupDO">
        update t_sys_group
        <set>
            <if test="pid != null">
                g_pid = #{pid,jdbcType=BIGINT},
            </if>
            <if test="groupCode != null">
                g_group_code = #{groupCode,jdbcType=INTEGER},
            </if>
            <if test="groupType != null">
                g_group_type = #{groupType,jdbcType=INTEGER},
            </if>
            <if test="groupName != null">
                g_group_name = #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                g_description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="groupSort != null">
                g_group_sort = #{groupSort,jdbcType=VARCHAR},
            </if>
            <if test="groupMaster != null">
                g_group_master = #{groupMaster,jdbcType=VARCHAR},
            </if>
            <if test="updater != null">
                g_updater = #{updater,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                g_update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where g_id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_sys_group
        where g_id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByIds" parameterType="java.lang.Long">
        delete
        from t_sys_group
        where g_id in
        <foreach collection="groupIds" item="id" open="(" separator="," close=")">
            #{id,jdbcType=BIGINT}
        </foreach>
    </delete>
</mapper>
