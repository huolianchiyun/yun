<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhangbin.yun.yunrights.modules.rights.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.zhangbin.yun.yunrights.modules.rights.model.$do.RoleDO">
        <id column="r_id" jdbcType="BIGINT" property="id"/>
        <result column="r_role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="r_level" jdbcType="INTEGER" property="level"/>
        <result column="r_description" jdbcType="VARCHAR" property="description"/>
        <result column="r_creator" jdbcType="VARCHAR" property="creator"/>
        <result column="r_updater" jdbcType="VARCHAR" property="updater"/>
        <result column="r_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="r_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <collection column="r_id" property="users"
                    javaType="java.util.HashSet" ofType="com.zhangbin.yun.yunrights.modules.rights.model.$do.UserDO"
                    select="com.zhangbin.yun.yunrights.modules.rights.mapper.UserMapper.selectByRoleId">
        </collection>
    </resultMap>

    <resultMap id="SmallBaseResultMap" type="com.zhangbin.yun.yunrights.modules.rights.model.$do.RoleDO">
        <id column="r_id" jdbcType="BIGINT" property="id"/>
        <result column="r_role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="r_level" jdbcType="INTEGER" property="level"/>
        <result column="r_description" jdbcType="VARCHAR" property="description"/>
        <result column="r_creator" jdbcType="VARCHAR" property="creator"/>
        <result column="r_updater" jdbcType="VARCHAR" property="updater"/>
        <result column="r_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="r_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        r_id, r_role_name, r_level, r_description, r_creator, r_updater, r_create_time, r_update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_role
        where r_id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByPrimaryKeys" parameterType="java.util.HashSet" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_role
        where r_id in (
        <foreach collection="ids" index="index" item="id" separator="," open="(" close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
        )
    </select>

    <select id="selectByRoleName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_role
        where r_role_name = #{roleName,jdbcType=VARCHAR} limit 1
    </select>

    <select id="selectRoleByUserId" parameterType="java.lang.Long" resultMap="SmallBaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_role where r_id in (
        select role_id from t_sys_user_role where user_id = #{u_id}
        )
    </select>

    <select id="countAssociatedUsers" parameterType="java.util.HashSet">
        select count(*) FROM t_sys_user u, t_sys_user_role r
        where u.u_id = r.user_id AND r.role_id in
        <foreach collection="roleIds" index="index" item="id" separator="," open="(" close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="hasGreaterLevelInUsers">
        select count(*)
        from t_sys_role
        where r_id in (
        select role_id from t_sys_user_role where user_id in (
        <foreach collection="userIds" index="index" item="id" separator="," open="(" close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
        ) and r_level >= #{levelOfCurrentUserMaxRole,jdbcType=INTEGER}
        )
    </select>

    <select id="selectAllByCriteria"
            parameterType="com.zhangbin.yun.yunrights.modules.rights.model.criteria.UserQueryCriteria"
            resultMap="SmallBaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_role
        <trim prefix="where" prefixOverrides="and | or">
            <if test='criteria != null'>
                <if test='criteria.blurry != ""'>
                    <if test='criteria.blurryType.isMatch("roleName")'>
                        and r_role_name like concat('%', #{criteria.blurry}, '%')
                    </if>
                    <if test='criteria.blurryType.isMatch("description")'>
                        and r_description like concat('%', #{criteria.blurry}, '%')
                    </if>
                </if>
                <if test='criteria.createTimes != null and criteria.createTimes > 0'>
                    and u_create_time
                    <foreach collection="createTimes" item="createTime" open=" between " separator=" and " close="">
                        #{createTime}
                    </foreach>
                </if>
            </if>
        </trim>
    </select>

    <insert id="insert" parameterType="com.zhangbin.yun.yunrights.modules.rights.model.$do.RoleDO">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_sys_role (r_id, r_role_name, r_level,
        r_description, r_creator, r_updater,
        r_create_time, r_update_time)
        values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER},
        #{description,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{updater,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.zhangbin.yun.yunrights.modules.rights.model.$do.RoleDO">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            r_id,
            <if test="roleName != null">
                r_role_name,
            </if>
            <if test="level != null">
                r_level,
            </if>
            <if test="description != null">
                r_description,
            </if>
            <if test="creator != null">
                r_creator,
            </if>
            <if test="updater != null">
                r_updater,
            </if>
            <if test="createTime != null">
                r_create_time,
            </if>
            <if test="updateTime != null">
                r_update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=BIGINT},
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="updater != null">
                #{updater,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.zhangbin.yun.yunrights.modules.rights.model.$do.RoleDO">
        update t_sys_role
        <set>
            <if test="roleName != null">
                r_role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                r_level = #{level,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                r_description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                r_creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="updater != null">
                r_updater = #{updater,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                r_create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                r_update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where r_id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_sys_role
        where r_id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="batchDeleteByIds" parameterType="java.util.Set">
        delete from t_sys_role
        where r_id in
        <foreach collection="roleIds" index="index" item="id" separator="," open="(" close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
    </delete>
</mapper>
