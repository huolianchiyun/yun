<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhangbin.yun.yunrights.modules.rights.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.zhangbin.yun.yunrights.modules.rights.model.$do.UserDO">
        <id column="u_id" jdbcType="BIGINT" property="id"/>
        <result column="u_nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="u_user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="u_gender" jdbcType="TINYINT" property="gender"/>
        <result column="u_pwd" jdbcType="VARCHAR" property="pwd"/>
        <result column="u_phone" jdbcType="VARCHAR" property="phone"/>
        <result column="u_email" jdbcType="VARCHAR" property="email"/>
        <result column="u_dept_id" jdbcType="BIGINT" property="deptId"/>
        <result column="u_is_enabled" jdbcType="BIT" property="enabled"/>
        <result column="u_creator" jdbcType="VARCHAR" property="creator"/>
        <result column="u_updater" jdbcType="VARCHAR" property="updater"/>
        <result column="u_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="u_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="u_pwd_reset_time" jdbcType="TIMESTAMP" property="pwdResetTime"/>
        <!-- 多对一关联映射:association -->
        <association property="dept"
                     javaType="com.zhangbin.yun.yunrights.modules.rights.model.$do.GroupDO"
                     column="u_id"
                     select="com.zhangbin.yun.yunrights.modules.rights.mapper.GroupMapper.selectDeptByUserId">
        </association>
        <!-- 多对多映射的关键:collection -->
        <collection property="roles" javaType="java.util.HashSet"
                    column="u_id" ofType="com.zhangbin.yun.yunrights.modules.rights.model.$do.RoleDO"
                    select="com.zhangbin.yun.yunrights.modules.rights.mapper.RoleMapper.selectRoleByUserId">
        </collection>
    </resultMap>

    <resultMap id="SmallBaseResultMap" type="com.zhangbin.yun.yunrights.modules.rights.model.$do.UserDO">
        <id column="u_id" jdbcType="BIGINT" property="id"/>
        <result column="u_nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="u_user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="u_gender" jdbcType="TINYINT" property="gender"/>
        <result column="u_pwd" jdbcType="VARCHAR" property="pwd"/>
        <result column="u_phone" jdbcType="VARCHAR" property="phone"/>
        <result column="u_email" jdbcType="VARCHAR" property="email"/>
        <result column="u_dept_id" jdbcType="BIGINT" property="deptId"/>
        <result column="u_is_enabled" jdbcType="BIT" property="enabled"/>
        <result column="u_creator" jdbcType="VARCHAR" property="creator"/>
        <result column="u_updater" jdbcType="VARCHAR" property="updater"/>
        <result column="u_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="u_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="u_pwd_reset_time" jdbcType="TIMESTAMP" property="pwdResetTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        u_id, u_nick_name, u_user_name, u_gender, u_pwd, u_phone, u_email, u_dept_id, u_is_enabled,
        u_creator, u_updater, u_create_time, u_update_time, u_pwd_reset_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_user
        where u_id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByIds" parameterType="java.util.HashSet" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_user
        where u_id in
        <foreach collection="ids" index="index" item="id" separator="," open="(" close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_user
        where u_user_name = #{userName,jdbcType=BIGINT}
    </select>

    <select id="selectByRoleId" parameterType="java.lang.Long" resultMap="SmallBaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_user
        where u_id in (
        select user_id from t_sys_user_role where role_id = #{r_id,jdbcType=BIGINT}
        )
    </select>

    <select id="selectByMenuIs" parameterType="java.util.HashSet" resultMap="SmallBaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_user u, t_sys_user_role ur, t_sys_role_menu rm
        where rm.menu_id in
        <foreach collection="menuIds" index="index" item="menuId" separator="," open="(" close=")">
            #{menuId,jdbcType=INTEGER}
        </foreach>
        and u.u_id = ur.user_id
        and ur.role_id = rm.role_id
    </select>

    <select id="selectByGroupIds" parameterType="java.util.HashSet" resultMap="SmallBaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_user left join t_sys_user_group on u_id = user_id and group_id in
        <foreach collection="groupIds" item="groupId" separator="," open="(" close=")">
            #{groupId,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="selectAllByCriteria"
            parameterType="com.zhangbin.yun.yunrights.modules.rights.model.criteria.UserQueryCriteria"
            resultMap="SmallBaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sys_user
        <trim prefix="where" prefixOverrides="and | or">
            <if test='criteria != null'>
                <if test='criteria.blurry != ""'>
                    <if test='criteria.blurryType.isMatch("userName")'>
                        and u_user_name like concat('%', #{criteria.blurry}, '%')
                    </if>
                    <if test='criteria.blurryType.isMatch("nickName")'>
                        and u_nick_name like concat('%', #{criteria.blurry}, '%')
                    </if>
                    <if test='criteria.blurryType.isMatch("email")'>
                        and u_email like concat('%', #{criteria.blurry}, '%')
                    </if>
                    <if test='criteria.blurryType.isMatch("phone")'>
                        and u_phone like concat('%', #{criteria.blurry}, '%')
                    </if>
                </if>
                <if test='criteria.enabled != null'>
                    and u_is_enabled in (${criteria.enabled})
                </if>
                <if test='criteria.createTimes != null and criteria.createTimes > 0'>
                    and u_create_time
                    <foreach collection="createTimes" item="createTime" open=" between " separator=" and " close="">
                        #{createTime}
                    </foreach>
                </if>
            </if>
        </trim>
    </select>

    <insert id="insert" parameterType="com.zhangbin.yun.yunrights.modules.rights.model.$do.UserDO">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_sys_user (u_id, u_nick_name, u_user_name,
        u_gender, u_pwd, u_phone, u_email,
        u_dept_id, u_is_enabled, u_creator,
        u_updater, u_create_time, u_update_time,
        u_pwd_reset_time)
        values (#{id,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
        #{gender,jdbcType=TINYINT}, #{pwd,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{deptId,jdbcType=BIGINT}, #{enabled,jdbcType=BIT}, #{creator,jdbcType=VARCHAR},
        #{updater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{pwdResetTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.zhangbin.yun.yunrights.modules.rights.model.$do.UserDO">
        update t_sys_user
        <set>
            <if test="nickName != null">
                u_nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                u_user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                u_gender = #{gender,jdbcType=TINYINT},
            </if>
            <if test="pwd != null">
                u_pwd = #{pwd,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                u_phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                u_email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                u_dept_id = #{deptId,jdbcType=BIGINT},
            </if>
            <if test="isEnabled != null">
                u_is_enabled = #{enabled,jdbcType=BIT},
            </if>
            <if test="creator != null">
                u_creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="updater != null">
                u_updater = #{updater,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                u_create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                u_update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pwdResetTime != null">
                u_pwd_reset_time = #{pwdResetTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where u_id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_sys_user
        where u_id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByIds" parameterType="java.util.Set">
        delete from t_sys_user
        where u_id in
        <foreach collection="userIds" index="index" item="id" separator="," open="(" close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
    </delete>
</mapper>
